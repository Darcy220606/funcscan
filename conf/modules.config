/*
========================================================================================
    Config file for defining DSL2 per module options and publishing paths
========================================================================================
    Available keys to override module options:
        ext.args            = Additional arguments appended to command in module.
        ext.args2           = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3           = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix          = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: 'copy',
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: SAMPLESHEET_CHECK {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: 'copy',
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: 'copy',
            pattern: '*_versions.yml'
        ]
    }

    withName: MULTIQC {
        ext.args   = params.multiqc_title ? "--title \"$params.multiqc_title\"" : ''
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: 'copy',
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: GUNZIP {
        publishDir = [
            enabled: false
        ]
    }

    withName: FARGENE {
        publishDir = [
            path: { "${params.outdir}/fargene" },
            mode: 'copy',
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.args = "--hmm-model ${params.fargene_hmm_model}"
    }

    withName: PROKKA {
        publishDir = [
            path: { "${params.outdir}/prokka" },
            mode: 'copy',
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: DEEPARG_PREDICT {
        publishDir = [
            path: { "${params.outdir}/deeparg/predict" },
            mode: 'copy',
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.args = [
            "--type ${params.deeparg_type}",
            "--min-prob ${params.deeparg_min_prob}",
            "--arg-alignment-identity ${params.deeparg_alignment_identity}",
            "--arg-alignment-evalue ${params.deeparg_alignment_evalue}",
            "--arg-alignment-overlap ${params.deeparg_alignment_overlap}",
            "--arg-num-alignments-per-entry ${params.deeparg_num_alignments_per_entry}"
        ].join(' ').trim()
    }

    withName: MACREL_CONTIGS {
        publishDir = [
            path: { "${params.outdir}/macrel" },
            mode: 'copy',
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
}

